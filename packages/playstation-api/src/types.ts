/*
 * Copyright (c) 2020. Oleg Shulyakov
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// ============================================================================
// Generated by https://www.json2ts.com/

export type GameContentType = {
    name: string;
    count: number;
    key: string;
};

export type SubtitleLang = {
    name: string;
    count: number;
    key: string;
};

export type ReleaseDate = {
    name: string;
    count: number;
    key: string;
};

export type GameDemo = {
    name: string;
    count: number;
    key: string;
};

export type Price = {
    name: string;
    count: number;
    key: string;
};

export type Genre = {
    name: string;
    count: number;
    key: string;
};

export type TopCategory = {
    name: string;
    count: number;
    key: string;
};

export type VoiceLang = {
    name: string;
    count: number;
    key: string;
};

export type GameType = {
    name: string;
    count: number;
    key: string;
};

export type Relationship = {
    name: string;
    count: number;
    key: string;
};

export type Platform = {
    name: string;
    count: number;
    key: string;
};

export type ContentRating = {
    description: string;
    rating_system: string;
    url: string;
};

export type Facets = {
    game_content_type: GameContentType[];
    subtitle_lang: SubtitleLang[];
    release_date: ReleaseDate[];
    game_demo: GameDemo[];
    price: Price[];
    genre: Genre[];
    top_category: TopCategory[];
    voice_lang: VoiceLang[];
    game_type: GameType[];
    relationship: Relationship[];
    platform: Platform[];
};

export type Attributes = {
    facets: Facets;
    next: unknown[];
};

export type Eligibility = {
    id: string;
    operand: string;
    operator: string;
    rightOperand?: unknown;
    name: string;
    description?: unknown;
    entitlement_type?: unknown;
    drms: unknown[];
};

export type MediaProp = unknown;

export type Drm = {
    drm_category_type: number;
    id: string;
    is_streamable: number;
    media_prop: MediaProp;
    size: number;
    type: number;
};

export type Metadata = {
    voiceLanguageCode: string[];
    subtitleLanguageCode: string[];
    packageSubType: string[];
};

export type Package = {
    platformId: number;
    platformName: string;
    size: unknown;
};

export type Entitlement = {
    description?: unknown;
    drms: Drm[];
    duration: number;
    durationOverrideTypeId?: unknown;
    exp_after_first_use: number;
    feature_type_id: number;
    id: string;
    license_type: number;
    metadata: Metadata;
    name: string;
    packageType: string;
    packages?: Package[];
    preorder_placeholder_flag: boolean;
    size: number;
    subType: number;
    subtitle_language_codes?: string[];
    type: number;
    use_count: number;
    voice_language_codes?: string[];
};

export type Reward = {
    id: string;
    entitlement_id: string;
    service_provider_id: string;
    discount: number;
    price: number;
    reward_type: number;
    display_price: string;
    name: string;
    description: string;
    isPlus: boolean;
    rewardSourceId: number;
    end_date: Date;
    reward_source_type_id: number;
    start_date: Date;
    bonus_display_price?: string;
    bonus_discount?: number;
};

export type DefaultSku = {
    amortizeFlag: boolean;
    bundleExclusiveFlag: boolean;
    chargeImmediatelyFlag: boolean;
    charge_type_id: number;
    credit_card_required_flag: number;
    defaultSku: boolean;
    display_price: string;
    eligibilities: Eligibility[];
    end_date: Date;
    entitlements: Entitlement[];
    id: string;
    is_original: boolean;
    name: string;
    platforms: number[];
    playability_date: Date;
    price: number;
    rewards?: Reward[];
    seasonPassExclusiveFlag: boolean;
    skuAvailabilityOverrideFlag: boolean;
    sku_type: number;
    type: string;
    wallet_charge_date: Date;
};

export type GameContentTypesList = {
    name: string;
    key: string;
};

export type PlaystationImage = {
    type: number;
    url: string;
};

export type PlaystationGameResponse = {
    bucket: string;
    bundleChildTypeId: number;
    cloud_only_platform: string[];
    container_type: string;
    content_type: string;
    default_sku: DefaultSku;
    gameContentTypesList: GameContentTypesList[];
    game_contentType: string;
    id: string;
    images: PlaystationImage[];
    name: string;
    playable_platform: string[];
    release_date: Date;
    restricted: boolean;
    revision: number;
    short_name: string;
    timestamp: unknown;
    top_category: string;
    url: string;
    provider_name: string;
    parent_name: string;
};

export type Metadata2 = unknown;

export type SceneLayout = {
    id: number;
    catalogEntryId: string;
    storeFrontId: number;
    templateId: number;
    subScenes: unknown[];
    storeTypeId: number;
};

export type PlaystationWidget = {
    name?: unknown;
    id: number;
    tag?: unknown;
    width?: unknown;
    height?: unknown;
    offsetX?: unknown;
    offsetY?: unknown;
    order: string;
    locationWidgetId: number;
    nsx_space?: unknown;
};

export type PlaystationLocation = {
    id: number;
    name?: unknown;
    width: string;
    height: string;
    offsetX: string;
    offsetY: string;
    widgets: PlaystationWidget[];
};

export type Extra = {
    templateExtraId: number;
    width: number;
    height: number;
    name?: unknown;
    key: string;
};

export type TemplateDef = {
    name: string;
    id: number;
    storeTypeId: number;
    imageUrl?: unknown;
    locations: PlaystationLocation[];
    extras: Extra[];
};

export type PlaystationResponse = {
    age_limit: number;
    attributes: Attributes;
    container_type: string;
    content_origin: number;
    content_rating?: ContentRating;
    dob_required: boolean;
    default_sku?: DefaultSku;
    id: string;
    images: unknown[];
    links: PlaystationGameResponse[];
    long_desc: string;
    metadata: Metadata2;
    name: string;
    promomedia: unknown[];
    restricted: boolean;
    revision: number;
    scene_layout: SceneLayout;
    size: number;
    sku_links: unknown[];
    sort_default: string;
    sort_default_direction: string;
    start: number;
    template_def: TemplateDef;
    timestamp: number;
    total_results: number;
    codeName?: string;
    cause?: string;
};

// ============================================================================

export type PlaystationRegion = {
    name: string;
    language: string;
    country: string;
    root: string;
};
